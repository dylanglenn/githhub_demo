{
	"info": {
		"_postman_id": "9d565741-989e-4389-a0d8-39bfa85d4fd1",
		"name": "UserAPI - Test Suite",
		"description": "API to create and manage user data. It allows users to register, login and get/update/delete their data.\n\nThis test suite verifies that all the endpoints of the API are working correctly.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "29574936-9d565741-989e-4389-a0d8-39bfa85d4fd1"
	},
	"item": [
		{
			"name": "Register a new user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "a35111e0-2180-41b7-b184-e32dd5d8a3f0",
						"exec": [
							"pm.variables.set(\"rUserName\", pm.variables.replaceIn('{{$randomUserName}}'));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "aabdee36-a483-4681-b774-f7bec9cb7f7c",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Response is an object\", function() {",
							"\tpm.expect(jsonData).to.be.an('object')",
							"});",
							"",
							"pm.test(\"User id is a number\", function(){",
							"\tpm.expect(jsonData.id).to.be.a(\"number\");",
							"});",
							"",
							"pm.test(\"Token is a string\", function(){",
							"\tpm.expect(jsonData.token).to.be.a(\"string\");",
							"});",
							"",
							"pm.test(\"User username was correctly set\", function(){",
							"\tpm.expect(jsonData.username).to.eql(pm.variables.replaceIn('{{rUserName}}'));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "2eefee61-7522-46b0-9ef3-1a6c1ff3cdc9",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"{{rUserName}}\",\n  \"password\": \"password123\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/v1/users/register",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"users",
						"register"
					]
				}
			},
			"response": [
				{
					"id": "2abe991d-66e3-41d0-84a3-5916f11f0db4",
					"name": "User registered successfully",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/v1/users/register",
							"path": [
								"v1",
								"users",
								"register"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": \"<integer>\",\n  \"username\": \"<string>\",\n  \"token\": \"<string>\"\n}"
				},
				{
					"id": "6841bf00-9be5-4b1d-93bb-4cf6155b847b",
					"name": "Error occurred",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/users/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								"register"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Log in a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "65329112-a472-410c-9d93-ad8bed735381",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Response is an object\", function() {",
							"\tpm.expect(jsonData).to.be.an('object')",
							"});",
							"",
							"pm.test(\"User id is a number\", function(){",
							"\tpm.expect(jsonData.id).to.be.a(\"number\");",
							"});",
							"",
							"pm.test(\"Token is a string\", function(){",
							"\tpm.expect(jsonData.token).to.be.a(\"string\");",
							"});",
							"",
							"pm.test(\"User username is correct\", function(){",
							"\tpm.expect(jsonData.username).to.eql(pm.variables.replaceIn('{{rUserName}}'));",
							"});",
							"",
							"pm.variables.set(\"newUserID\", jsonData.id);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "9f4e0fae-42c1-4389-bf0e-49635e5c1c6d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"{{rUserName}}\",\n  \"password\": \"password123\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/v1/users/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"users",
						"login"
					]
				}
			},
			"response": [
				{
					"id": "f0fe794f-1a2d-45ac-8ad7-cc91a15bc756",
					"name": "User logged in successfully",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/v1/users/login",
							"path": [
								"v1",
								"users",
								"login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": \"<integer>\",\n  \"username\": \"<string>\",\n  \"token\": \"<string>\"\n}"
				},
				{
					"id": "cbff5ff4-c2eb-4250-a0bd-09caf4b5e04b",
					"name": "Unauthorized",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								"login"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"id": "1c0b5d36-4947-4cc8-a9aa-d68f9e6f549e",
					"name": "Error occurred",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								"login"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Retrieve a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "326de299-29e2-41d5-bf24-491527d4b950",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Response is an object\", function() {",
							"\tpm.expect(jsonData).to.be.an('object')",
							"});",
							"",
							"pm.test(\"User id is a number\", function(){",
							"\tpm.expect(jsonData.id).to.be.a(\"number\");",
							"});",
							"",
							"pm.test(\"User username is correct\", function(){",
							"\tpm.expect(jsonData.username).to.eql(pm.variables.replaceIn('{{rUserName}}'));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "f71c901f-7292-4dcf-a06d-6e30610d8139",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/v1/users/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"users",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{newUserID}}"
						}
					]
				}
			},
			"response": [
				{
					"id": "adab3c05-dcf8-48d9-a330-3e2ece9d230e",
					"name": "Successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "/v1/users/:id",
							"path": [
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": \"<integer>\",\n  \"username\": \"<string>\"\n}"
				},
				{
					"id": "2d5de9e1-cdf6-4ee8-9817-be2a57264994",
					"name": "User not found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"id": "94e929eb-266c-4e54-a2c5-b964e2c7b468",
					"name": "Error occurred",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Update a user",
			"id": "c58f162d-9007-4e65-84c3-ef409a9579f3",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/v1/users/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"users",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{newUserID}}"
						}
					]
				}
			},
			"response": [
				{
					"id": "80490b05-e318-4c3d-a66c-2f92c846f969",
					"name": "User updated successfully",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"id": "1c5e06d2-5af0-417d-95ba-d9875466881e",
					"name": "Error occurred",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Delete a user",
			"id": "cac07fb8-2d91-45f7-9b76-6fbb72e15087",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/v1/users/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"users",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{newUserID}}"
						}
					]
				}
			},
			"response": [
				{
					"id": "5c9fc66e-0b41-45c9-af8d-5ecec8e2ebc7",
					"name": "User deleted successfully",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"id": "5051cebe-16f4-4168-a9f5-64422d2e82a5",
					"name": "Error occurred",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "X-API-Key",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{apiKey}}",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "ef4ab0b6-6be9-42ee-8657-0df0c40ae730",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "9c02c320-2ea7-4120-87ad-5e02d116d7a1",
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Response time is less than 800ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(800);",
					"});",
					"",
					"pm.test(\"Successful request\", ()=> { ",
					"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
					"});",
					""
				]
			}
		}
	]
}